/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.39
 * Generated at: 2025-03-20 15:50:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.List;
import Model.ProjetModel;

public final class delete_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("Model.ProjetModel");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "Les JSPs ne permettent que GET, POST ou HEAD. Jasper permet aussi OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"fr\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Gestion des Projets</title>\r\n");
      out.write("    <script src=\"https://cdn.tailwindcss.com\"></script>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"bg-white text-gray-800\">\r\n");
      out.write("\r\n");
      out.write("<!-- Barre de navigation -->\r\n");
      out.write("<nav class=\"flex items-center justify-between p-4 shadow-md\">\r\n");
      out.write("    <div class=\"text-2xl font-bold\">ConstructionXpert</div>\r\n");
      out.write("    <ul class=\"hidden space-x-4 md:flex\">\r\n");
      out.write("        <li><a href=\"home.jsp\" class=\"hover:text-pink-600\">Home</a></li>\r\n");
      out.write("        <li><a href=\"ListProjets.jsp\" class=\"hover:text-pink-600\">Projets</a></li>\r\n");
      out.write("        <li><a href=\"Ressources.jsp\" class=\"hover:text-pink-600\">Resources</a></li>\r\n");
      out.write("    </ul>\r\n");
      out.write("    <a href=\"createprojet.jsp\" class=\"hidden md:inline-block px-4 py-2 bg-pink-500 text-white rounded hover:bg-pink-600\">\r\n");
      out.write("        Créer un projet\r\n");
      out.write("    </a>\r\n");
      out.write("</nav>\r\n");
      out.write("\r\n");
      out.write("<!-- Contenu principal -->\r\n");
      out.write("<main class=\"mx-auto max-w-7xl py-8 px-4\">\r\n");
      out.write("    <h1 class=\"text-2xl font-semibold mb-8\">Liste des Projets</h1>\r\n");
      out.write("\r\n");
      out.write("    ");
 List<ProjetModel> projets = (List<ProjetModel>) request.getAttribute("projets"); 
      out.write("\r\n");
      out.write("\r\n");
      out.write("    ");
 if (projets != null && !projets.isEmpty()) { 
      out.write("\r\n");
      out.write("    <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n");
      out.write("        ");
 for (ProjetModel projet : projets) { 
      out.write("\r\n");
      out.write("        <div class=\"border border-gray-300 shadow-sm rounded-lg overflow-hidden\">\r\n");
      out.write("            <div class=\"bg-gray-200 px-4 py-2 flex justify-between items-center\">\r\n");
      out.write("                <h2 class=\"text-xl font-bold\">");
      out.print( projet.getNom() );
      out.write("</h2>\r\n");
      out.write("                <div class=\"flex space-x-2\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                    <!-- Formulaire Supprimer -->\r\n");
      out.write("                    <form method=\"post\" action=\"ProjetServlet\" class=\"inline\" onsubmit=\"return confirm('Voulez-vous vraiment supprimer ce projet ?');\">\r\n");
      out.write("                        <input type=\"hidden\" name=\"id\" value=\"");
      out.print( projet.getId() );
      out.write("\">\r\n");
      out.write("                        <input type=\"hidden\" name=\"action\" value=\"delete\">\r\n");
      out.write("                        <button type=\"submit\" class=\"text-red-500 hover:text-red-700\">\r\n");
      out.write("                            <i class=\"fas fa-trash\"></i>\r\n");
      out.write("                        </button>\r\n");
      out.write("                    </form>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"p-4 space-y-2\">\r\n");
      out.write("                <h3 class=\"text-md font-semibold\">Description</h3>\r\n");
      out.write("                <p class=\"text-sm text-gray-600\">");
      out.print( projet.getDescription() );
      out.write("</p>\r\n");
      out.write("                <div class=\"text-sm mt-4\">\r\n");
      out.write("                    <div>\r\n");
      out.write("                        <span class=\"font-semibold\">Date début :</span>\r\n");
      out.write("                        <p>");
      out.print( projet.getDate_debut() );
      out.write("</p>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"mt-2\">\r\n");
      out.write("                        <span class=\"font-semibold\">Date fin :</span>\r\n");
      out.write("                        <p>");
      out.print( projet.getDate_fin() );
      out.write("</p>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"mt-2\">\r\n");
      out.write("                    <span class=\"font-semibold\">Budget :</span>\r\n");
      out.write("                    <p>");
      out.print( projet.getBudget() );
      out.write(" €</p>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("    ");
 } else { 
      out.write("\r\n");
      out.write("    <p class=\"text-center text-gray-600 text-lg\">Aucun projet disponible.</p>\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("</main>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
